<?xml version="1.0" encoding="utf-8"?>
<resources>
    <attr name="FoolListView" format="reference" />
    
    <declare-styleable name="FoolListView">
        <attr name="FoolListView" />
        <!-- Reference to an array resource that will populate the ListView.  For static content,
             this is simpler than populating the ListView programmatically. -->
        <!-- Drawable or color to draw between list items. -->
        <attr name="divider" format="reference|color" />
        <!-- Height of the divider. Will use the intrinsic height of the divider if this
             is not specified. -->
        <attr name="dividerHeight" format="dimension" />
        <!-- When set to false, the ListView will not draw the divider after each header view.
             The default value is true. -->   
        <attr name="pulldeltaDistance" format="dimension" />

        <attr name="innerWindowWidth" format ="dimension"/>
        
        <attr name="innerWindowHeight" format ="dimension"/>
        
    </declare-styleable>
  <eat-comment />

   <attr name="FoolViewStyle" format="reference" />
 	<declare-styleable name="AbsFoolView">
        <!-- Drawable used to indicate the currently selected item in the list. -->
        <attr name="listSelector" format="color|reference" />
        <!-- When set to true, the selector will be drawn over the selected item.
             Otherwise the selector is drawn behind the selected item. The default
             value is false. -->
        <attr name="drawSelectorOnTop" format="boolean" />
        <!-- Used by ListView and GridView to stack their content from the bottom. -->
        <attr name="stackFromBottom" format="boolean" />
        <!-- When set to true, the list uses a drawing cache during scrolling.
             This makes the rendering faster but uses more memory. The default
             value is true. -->
        <attr name="pullingCache" format="boolean" />

      <!-- Indicates that this list will always be drawn on top of solid, single-color
         opaque background. This allows the list to optimize drawing. -->
       <attr name="cacheColorHint" format="color" />
        <!-- Enables the fast scroll thumb that can be dragged to quickly scroll through
             the list. -->
             
       <attr name="choiceMode">
            <!-- Normal list that does not indicate choices. -->
            <enum name="none" value="0" />
            <!-- The list allows up to one choice. -->
           <enum name="singleChoice" value="1" />
             <!-- The list allows multiple choices. -->
             <enum name="multipleChoice" value="2" />
           <!-- The list allows multiple choices in a custom selection mode. -->
           <enum name="multipleChoiceModal" value="3" />
         </attr>
    </declare-styleable>

    <declare-styleable name="SlideToRefresh">

        <!-- A drawable to use as the background of the Refreshable View -->
        <attr name="strRefreshableViewBackground" format="reference|color" />

        <!-- A drawable to use as the background of the Lefter and Righter Loading Views -->
        <attr name="strLefterBackground" format="reference|color" />

        <!-- Text Color of the Lefter and Righter Loading Views -->
        <attr name="strLefterTextColor" format="reference|color" />

        <!-- Text Color of the Lefter and Righter Loading Views Sub Lefter -->
        <attr name="strLefterSubTextColor" format="reference|color" />

        <!-- Mode of Pull-to-Refresh that should be used -->
        <attr name="strMode">
            <flag name="disabled" value="0x0" />
            <flag name="slideFromLeft" value="0x1" />
            <flag name="slideFromRight" value="0x2" />
            <flag name="both" value="0x3" />
            <flag name="manualOnly" value="0x4" />
        </attr>

        <!-- Whether the Indicator overlay(s) should be used -->
        <attr name="strShowIndicator" format="reference|boolean" />

        <!-- Drawable to use as Loading Indicator. Changes both Lefter and Righter. -->
        <attr name="strDrawable" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Lefter View. Overrides value set in strDrawable. -->
        <attr name="strDrawableStart" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Righter View. Overrides value set in strDrawable. -->
        <attr name="strDrawableEnd" format="reference" />

        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
        <attr name="strOverScroll" format="reference|boolean" />

        <!-- Base text color, typeface, size, and style for Lefter and Righter Loading Views -->
        <attr name="strLefterTextAppearance" format="reference" />

        <!-- Base text color, typeface, size, and style for Lefter and Righter Loading Views Sub Lefter -->
        <attr name="strSubLefterTextAppearance" format="reference" />

        <!-- Style of Animation should be used displayed when pulling. -->
        <attr name="strAnimationStyle">
            <flag name="rotate" value="0x0" />
            <flag name="flip" value="0x1" />
        </attr>

        <!-- Whether the user can scroll while the View is Refreshing -->
        <attr name="strScrollingWhileRefreshingEnabled" format="reference|boolean" />

        <!--
        	Whether SlideToRefreshListView has it's extras enabled. This allows the user to be 
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Lefter and/or Righter Views to the ListView.
        -->
        <attr name="strListViewExtrasEnabled" format="reference|boolean" />

        <!--
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        -->
        <attr name="strRotateDrawableWhileSliding" format="reference|boolean" />

        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
        <attr name="strAdapterViewBackground" format="reference|color" />
        <attr name="strDrawableTop" format="reference" />
        <attr name="strDrawableBottom" format="reference" />
    </declare-styleable>
</resources>