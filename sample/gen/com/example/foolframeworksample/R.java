/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.example.foolframeworksample;

public final class R {
    public static final class anim {
        public static final int slide_in_from_bottom=0x7f040000;
        public static final int slide_in_from_top=0x7f040001;
        public static final int slide_out_to_bottom=0x7f040002;
        public static final int slide_out_to_top=0x7f040003;
    }
    public static final class attr {
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int FoolListView=0x7f010000;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int FoolViewStyle=0x7f010004;
        /**  Indicates that this list will always be drawn on top of solid, single-color
         opaque background. This allows the list to optimize drawing. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cacheColorHint=0x7f010009;
        /**  Enables the fast scroll thumb that can be dragged to quickly scroll through
             the list. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Normal list that does not indicate choices. </td></tr>
<tr><td><code>singleChoice</code></td><td>1</td><td> The list allows up to one choice. </td></tr>
<tr><td><code>multipleChoice</code></td><td>2</td><td> The list allows multiple choices. </td></tr>
<tr><td><code>multipleChoiceModal</code></td><td>3</td><td> The list allows multiple choices in a custom selection mode. </td></tr>
</table>
         */
        public static final int choiceMode=0x7f01000a;
        /**  Reference to an array resource that will populate the ListView.  For static content,
             this is simpler than populating the ListView programmatically. 
 Drawable or color to draw between list items. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int divider=0x7f010001;
        /**  Height of the divider. Will use the intrinsic height of the divider if this
             is not specified. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dividerHeight=0x7f010002;
        /**  When set to true, the selector will be drawn over the selected item.
             Otherwise the selector is drawn behind the selected item. The default
             value is false. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int drawSelectorOnTop=0x7f010006;
        /**  Drawable used to indicate the currently selected item in the list. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int listSelector=0x7f010005;
        /**  When set to false, the ListView will not draw the divider after each header view.
             The default value is true. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int pulldeltaDistance=0x7f010003;
        /**  When set to true, the list uses a drawing cache during scrolling.
             This makes the rendering faster but uses more memory. The default
             value is true. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int pullingCache=0x7f010008;
        /**  Used by ListView and GridView to stack their content from the bottom. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int stackFromBottom=0x7f010007;
        /**  BELOW HERE ARE DEPRECEATED. DO NOT USE. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int strAdapterViewBackground=0x7f01001b;
        /**  Style of Animation should be used displayed when pulling. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>rotate</code></td><td>0x0</td><td></td></tr>
<tr><td><code>flip</code></td><td>0x1</td><td></td></tr>
</table>
         */
        public static final int strAnimationStyle=0x7f010017;
        /**  Drawable to use as Loading Indicator. Changes both Lefter and Righter. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int strDrawable=0x7f010011;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int strDrawableBottom=0x7f01001d;
        /**  Drawable to use as Loading Indicator in the Righter View. Overrides value set in strDrawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int strDrawableEnd=0x7f010013;
        /**  Drawable to use as Loading Indicator in the Lefter View. Overrides value set in strDrawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int strDrawableStart=0x7f010012;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int strDrawableTop=0x7f01001c;
        /**  A drawable to use as the background of the Lefter and Righter Loading Views 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int strLefterBackground=0x7f01000c;
        /**  Text Color of the Lefter and Righter Loading Views Sub Lefter 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int strLefterSubTextColor=0x7f01000e;
        /**  Base text color, typeface, size, and style for Lefter and Righter Loading Views 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int strLefterTextAppearance=0x7f010015;
        /**  Text Color of the Lefter and Righter Loading Views 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int strLefterTextColor=0x7f01000d;
        /** 
        	Whether SlideToRefreshListView has it's extras enabled. This allows the user to be 
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Lefter and/or Righter Views to the ListView.
        
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
         */
        public static final int strListViewExtrasEnabled=0x7f010019;
        /**  Mode of Pull-to-Refresh that should be used 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>disabled</code></td><td>0x0</td><td></td></tr>
<tr><td><code>slideFromLeft</code></td><td>0x1</td><td></td></tr>
<tr><td><code>slideFromRight</code></td><td>0x2</td><td></td></tr>
<tr><td><code>both</code></td><td>0x3</td><td></td></tr>
<tr><td><code>manualOnly</code></td><td>0x4</td><td></td></tr>
</table>
         */
        public static final int strMode=0x7f01000f;
        /**  Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
         */
        public static final int strOverScroll=0x7f010014;
        /**  A drawable to use as the background of the Refreshable View 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int strRefreshableViewBackground=0x7f01000b;
        /** 
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
         */
        public static final int strRotateDrawableWhileSliding=0x7f01001a;
        /**  Whether the user can scroll while the View is Refreshing 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
         */
        public static final int strScrollingWhileRefreshingEnabled=0x7f010018;
        /**  Whether the Indicator overlay(s) should be used 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
         */
        public static final int strShowIndicator=0x7f010010;
        /**  Base text color, typeface, size, and style for Lefter and Righter Loading Views Sub Lefter 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int strSubLefterTextAppearance=0x7f010016;
    }
    public static final class color {
        public static final int author_text=0x7f060019;
        public static final int black=0x7f060001;
        public static final int blue=0x7f060007;
        public static final int bright_foreground_light=0x7f060011;
        public static final int bright_foreground_light_disabled=0x7f060013;
        public static final int bright_foreground_light_inverse=0x7f060012;
        public static final int dim_foreground_light=0x7f060014;
        public static final int dim_foreground_light_disabled=0x7f060015;
        public static final int dim_foreground_light_inverse=0x7f060016;
        public static final int dim_foreground_light_inverse_disabled=0x7f060017;
        public static final int face_bg=0x7f06001a;
        public static final int frame_button_text_nor=0x7f06001b;
        public static final int frame_button_text_select=0x7f06001c;
        public static final int full_transparent=0x7f06000f;
        public static final int gold=0x7f060004;
        public static final int gray=0x7f060002;
        public static final int grayslate=0x7f06000d;
        public static final int graywhite=0x7f06000c;
        public static final int green=0x7f060006;
        public static final int half_transparent=0x7f060010;
        public static final int head_text=0x7f060018;
        public static final int lemonyellow=0x7f06000b;
        public static final int lightblue=0x7f06000e;
        public static final int listitem_black=0x7f06001e;
        public static final int listitem_blue=0x7f060020;
        public static final int listitem_gray=0x7f060021;
        public static final int listitem_green=0x7f060022;
        public static final int listitem_greenyellow=0x7f060023;
        public static final int listitem_transparent=0x7f06001d;
        public static final int listitem_white=0x7f06001f;
        public static final int listitem_yellow=0x7f060024;
        public static final int orange=0x7f06000a;
        public static final int pink=0x7f060009;
        public static final int purple=0x7f060008;
        public static final int red=0x7f060003;
        public static final int white=0x7f060000;
        public static final int yellow=0x7f060005;
    }
    public static final class dimen {
        /**  Default screen margins, per the Android Design guidelines. 

         Customize dimensions originally defined in res/values/dimens.xml (such as
         screen margins) for sw720dp devices (e.g. 10" tablets) in landscape here.
    
         */
        public static final int activity_horizontal_margin=0x7f070005;
        public static final int activity_vertical_margin=0x7f070006;
        public static final int header_footer_left_right_padding=0x7f070003;
        public static final int header_footer_top_bottom_padding=0x7f070004;
        public static final int indicator_corner_radius=0x7f070001;
        public static final int indicator_internal_padding=0x7f070002;
        public static final int indicator_right_padding=0x7f070000;
    }
    public static final class drawable {
        public static final int default_str_flip=0x7f020000;
        public static final int default_str_rotate=0x7f020001;
        public static final int divider_horizontal_dark_opaque=0x7f020002;
        public static final int ic_launcher=0x7f020003;
        public static final int indicator_arrow=0x7f020004;
        public static final int indicator_bg_left=0x7f020005;
        public static final int indicator_bg_right=0x7f020006;
        public static final int listview_divider_line=0x7f020007;
        public static final int listview_item_selector=0x7f020008;
        public static final int listview_item_selector_bg=0x7f020009;
        public static final int overscroll_edge=0x7f02000a;
        public static final int overscroll_glow=0x7f02000b;
    }
    public static final class id {
        public static final int action_settings=0x7f050013;
        public static final int both=0x7f050007;
        public static final int disabled=0x7f050004;
        public static final int fl_inner=0x7f05000e;
        public static final int flip=0x7f05000a;
        public static final int foolview=0x7f05000b;
        public static final int innerView=0x7f05000c;
        public static final int manualOnly=0x7f050008;
        public static final int multipleChoice=0x7f050002;
        public static final int multipleChoiceModal=0x7f050003;
        public static final int none=0x7f050000;
        public static final int rotate=0x7f050009;
        public static final int singleChoice=0x7f050001;
        public static final int slideFromLeft=0x7f050005;
        public static final int slideFromRight=0x7f050006;
        public static final int slide_to_refresh_image=0x7f05000f;
        public static final int slide_to_refresh_progress=0x7f050010;
        public static final int slide_to_refresh_sub_text=0x7f050012;
        public static final int slide_to_refresh_text=0x7f050011;
        public static final int textView1=0x7f05000d;
    }
    public static final class layout {
        public static final int activity_main=0x7f030000;
        public static final int innerwindow_layout=0x7f030001;
        public static final int itemview_layout=0x7f030002;
        public static final int m=0x7f030003;
        public static final int slide_to_refresh_lefter_horizontal=0x7f030004;
    }
    public static final class menu {
        public static final int main=0x7f0a0000;
    }
    public static final class string {
        public static final int action_settings=0x7f08000b;
        public static final int app_name=0x7f080006;
        public static final int hello_world=0x7f08000c;
        public static final int inner_btn_exit=0x7f08000a;
        public static final int inner_btn_go=0x7f080009;
        public static final int inner_btn_ready=0x7f080008;
        public static final int inner_text=0x7f080007;
        public static final int slide_to_refresh_from_bottom_refreshing_label=0x7f080005;
        public static final int slide_to_refresh_from_bottom_release_label=0x7f080004;
        /** 改： Just use standard Pull Down String when pulling up. These can be set for languages which require it 
         */
        public static final int slide_to_refresh_from_bottom_slide_label=0x7f080003;
        public static final int slide_to_refresh_refreshing_label=0x7f080002;
        public static final int slide_to_refresh_release_label=0x7f080001;
        public static final int slide_to_refresh_slide_label=0x7f080000;
    }
    public static final class style {
        /** 
        Base application theme for API 11+. This theme completely replaces
        AppBaseTheme from res/values/styles.xml on API 11+ devices.
    
 API 11 theme customizations can go here. 

        Base application theme for API 14+. This theme completely replaces
        AppBaseTheme from BOTH res/values/styles.xml and
        res/values-v11/styles.xml on API 14+ devices.
    
 API 14 theme customizations can go here. 

        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
    

            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        

        Base application theme for API 11+. This theme completely replaces
        AppBaseTheme from res/values/styles.xml on API 11+ devices.
    
 API 11 theme customizations can go here. 

        Base application theme for API 14+. This theme completely replaces
        AppBaseTheme from BOTH res/values/styles.xml and
        res/values-v11/styles.xml on API 14+ devices.
    
 API 14 theme customizations can go here. 
         */
        public static final int AppBaseTheme=0x7f090002;
        /**  Application theme. 
 All customizations that are NOT specific to a particular API-level can go here. 
         */
        public static final int AppTheme=0x7f090003;
        public static final int FoolView=0x7f090001;
        public static final int foolview_style=0x7f090000;
    }
    public static final class styleable {
        /** Attributes that can be used with a AbsFoolView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AbsFoolView_cacheColorHint com.example.foolframeworksample:cacheColorHint}</code></td><td> Indicates that this list will always be drawn on top of solid, single-color
         opaque background.</td></tr>
           <tr><td><code>{@link #AbsFoolView_choiceMode com.example.foolframeworksample:choiceMode}</code></td><td> Enables the fast scroll thumb that can be dragged to quickly scroll through
             the list.</td></tr>
           <tr><td><code>{@link #AbsFoolView_drawSelectorOnTop com.example.foolframeworksample:drawSelectorOnTop}</code></td><td> When set to true, the selector will be drawn over the selected item.</td></tr>
           <tr><td><code>{@link #AbsFoolView_listSelector com.example.foolframeworksample:listSelector}</code></td><td> Drawable used to indicate the currently selected item in the list.</td></tr>
           <tr><td><code>{@link #AbsFoolView_pullingCache com.example.foolframeworksample:pullingCache}</code></td><td> When set to true, the list uses a drawing cache during scrolling.</td></tr>
           <tr><td><code>{@link #AbsFoolView_stackFromBottom com.example.foolframeworksample:stackFromBottom}</code></td><td> Used by ListView and GridView to stack their content from the bottom.</td></tr>
           </table>
           @see #AbsFoolView_cacheColorHint
           @see #AbsFoolView_choiceMode
           @see #AbsFoolView_drawSelectorOnTop
           @see #AbsFoolView_listSelector
           @see #AbsFoolView_pullingCache
           @see #AbsFoolView_stackFromBottom
         */
        public static final int[] AbsFoolView = {
            0x7f010005, 0x7f010006, 0x7f010007, 0x7f010008,
            0x7f010009, 0x7f01000a
        };
        /**
          <p>
          @attr description
           Indicates that this list will always be drawn on top of solid, single-color
         opaque background. This allows the list to optimize drawing. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.foolframeworksample:cacheColorHint
        */
        public static final int AbsFoolView_cacheColorHint = 4;
        /**
          <p>
          @attr description
           Enables the fast scroll thumb that can be dragged to quickly scroll through
             the list. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Normal list that does not indicate choices. </td></tr>
<tr><td><code>singleChoice</code></td><td>1</td><td> The list allows up to one choice. </td></tr>
<tr><td><code>multipleChoice</code></td><td>2</td><td> The list allows multiple choices. </td></tr>
<tr><td><code>multipleChoiceModal</code></td><td>3</td><td> The list allows multiple choices in a custom selection mode. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.example.foolframeworksample:choiceMode
        */
        public static final int AbsFoolView_choiceMode = 5;
        /**
          <p>
          @attr description
           When set to true, the selector will be drawn over the selected item.
             Otherwise the selector is drawn behind the selected item. The default
             value is false. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.foolframeworksample:drawSelectorOnTop
        */
        public static final int AbsFoolView_drawSelectorOnTop = 1;
        /**
          <p>
          @attr description
           Drawable used to indicate the currently selected item in the list. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.example.foolframeworksample:listSelector
        */
        public static final int AbsFoolView_listSelector = 0;
        /**
          <p>
          @attr description
           When set to true, the list uses a drawing cache during scrolling.
             This makes the rendering faster but uses more memory. The default
             value is true. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.foolframeworksample:pullingCache
        */
        public static final int AbsFoolView_pullingCache = 3;
        /**
          <p>
          @attr description
           Used by ListView and GridView to stack their content from the bottom. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.foolframeworksample:stackFromBottom
        */
        public static final int AbsFoolView_stackFromBottom = 2;
        /** Attributes that can be used with a FoolListView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #FoolListView_FoolListView com.example.foolframeworksample:FoolListView}</code></td><td></td></tr>
           <tr><td><code>{@link #FoolListView_divider com.example.foolframeworksample:divider}</code></td><td> Reference to an array resource that will populate the ListView.</td></tr>
           <tr><td><code>{@link #FoolListView_dividerHeight com.example.foolframeworksample:dividerHeight}</code></td><td> Height of the divider.</td></tr>
           <tr><td><code>{@link #FoolListView_pulldeltaDistance com.example.foolframeworksample:pulldeltaDistance}</code></td><td> When set to false, the ListView will not draw the divider after each header view.</td></tr>
           </table>
           @see #FoolListView_FoolListView
           @see #FoolListView_divider
           @see #FoolListView_dividerHeight
           @see #FoolListView_pulldeltaDistance
         */
        public static final int[] FoolListView = {
            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003
        };
        /**
          <p>This symbol is the offset where the {@link com.example.foolframeworksample.R.attr#FoolListView}
          attribute's value can be found in the {@link #FoolListView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.foolframeworksample:FoolListView
        */
        public static final int FoolListView_FoolListView = 0;
        /**
          <p>
          @attr description
           Reference to an array resource that will populate the ListView.  For static content,
             this is simpler than populating the ListView programmatically. 
 Drawable or color to draw between list items. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.example.foolframeworksample:divider
        */
        public static final int FoolListView_divider = 1;
        /**
          <p>
          @attr description
           Height of the divider. Will use the intrinsic height of the divider if this
             is not specified. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.foolframeworksample:dividerHeight
        */
        public static final int FoolListView_dividerHeight = 2;
        /**
          <p>
          @attr description
           When set to false, the ListView will not draw the divider after each header view.
             The default value is true. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.foolframeworksample:pulldeltaDistance
        */
        public static final int FoolListView_pulldeltaDistance = 3;
        /** Attributes that can be used with a SlideToRefresh.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SlideToRefresh_strAdapterViewBackground com.example.foolframeworksample:strAdapterViewBackground}</code></td><td> BELOW HERE ARE DEPRECEATED.</td></tr>
           <tr><td><code>{@link #SlideToRefresh_strAnimationStyle com.example.foolframeworksample:strAnimationStyle}</code></td><td> Style of Animation should be used displayed when pulling.</td></tr>
           <tr><td><code>{@link #SlideToRefresh_strDrawable com.example.foolframeworksample:strDrawable}</code></td><td> Drawable to use as Loading Indicator.</td></tr>
           <tr><td><code>{@link #SlideToRefresh_strDrawableBottom com.example.foolframeworksample:strDrawableBottom}</code></td><td></td></tr>
           <tr><td><code>{@link #SlideToRefresh_strDrawableEnd com.example.foolframeworksample:strDrawableEnd}</code></td><td> Drawable to use as Loading Indicator in the Righter View.</td></tr>
           <tr><td><code>{@link #SlideToRefresh_strDrawableStart com.example.foolframeworksample:strDrawableStart}</code></td><td> Drawable to use as Loading Indicator in the Lefter View.</td></tr>
           <tr><td><code>{@link #SlideToRefresh_strDrawableTop com.example.foolframeworksample:strDrawableTop}</code></td><td></td></tr>
           <tr><td><code>{@link #SlideToRefresh_strLefterBackground com.example.foolframeworksample:strLefterBackground}</code></td><td> A drawable to use as the background of the Lefter and Righter Loading Views </td></tr>
           <tr><td><code>{@link #SlideToRefresh_strLefterSubTextColor com.example.foolframeworksample:strLefterSubTextColor}</code></td><td> Text Color of the Lefter and Righter Loading Views Sub Lefter </td></tr>
           <tr><td><code>{@link #SlideToRefresh_strLefterTextAppearance com.example.foolframeworksample:strLefterTextAppearance}</code></td><td> Base text color, typeface, size, and style for Lefter and Righter Loading Views </td></tr>
           <tr><td><code>{@link #SlideToRefresh_strLefterTextColor com.example.foolframeworksample:strLefterTextColor}</code></td><td> Text Color of the Lefter and Righter Loading Views </td></tr>
           <tr><td><code>{@link #SlideToRefresh_strListViewExtrasEnabled com.example.foolframeworksample:strListViewExtrasEnabled}</code></td><td>
        	Whether SlideToRefreshListView has it's extras enabled.</td></tr>
           <tr><td><code>{@link #SlideToRefresh_strMode com.example.foolframeworksample:strMode}</code></td><td> Mode of Pull-to-Refresh that should be used </td></tr>
           <tr><td><code>{@link #SlideToRefresh_strOverScroll com.example.foolframeworksample:strOverScroll}</code></td><td> Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh.</td></tr>
           <tr><td><code>{@link #SlideToRefresh_strRefreshableViewBackground com.example.foolframeworksample:strRefreshableViewBackground}</code></td><td> A drawable to use as the background of the Refreshable View </td></tr>
           <tr><td><code>{@link #SlideToRefresh_strRotateDrawableWhileSliding com.example.foolframeworksample:strRotateDrawableWhileSliding}</code></td><td>
        	Whether the Drawable should be continually rotated as you pull.</td></tr>
           <tr><td><code>{@link #SlideToRefresh_strScrollingWhileRefreshingEnabled com.example.foolframeworksample:strScrollingWhileRefreshingEnabled}</code></td><td> Whether the user can scroll while the View is Refreshing </td></tr>
           <tr><td><code>{@link #SlideToRefresh_strShowIndicator com.example.foolframeworksample:strShowIndicator}</code></td><td> Whether the Indicator overlay(s) should be used </td></tr>
           <tr><td><code>{@link #SlideToRefresh_strSubLefterTextAppearance com.example.foolframeworksample:strSubLefterTextAppearance}</code></td><td> Base text color, typeface, size, and style for Lefter and Righter Loading Views Sub Lefter </td></tr>
           </table>
           @see #SlideToRefresh_strAdapterViewBackground
           @see #SlideToRefresh_strAnimationStyle
           @see #SlideToRefresh_strDrawable
           @see #SlideToRefresh_strDrawableBottom
           @see #SlideToRefresh_strDrawableEnd
           @see #SlideToRefresh_strDrawableStart
           @see #SlideToRefresh_strDrawableTop
           @see #SlideToRefresh_strLefterBackground
           @see #SlideToRefresh_strLefterSubTextColor
           @see #SlideToRefresh_strLefterTextAppearance
           @see #SlideToRefresh_strLefterTextColor
           @see #SlideToRefresh_strListViewExtrasEnabled
           @see #SlideToRefresh_strMode
           @see #SlideToRefresh_strOverScroll
           @see #SlideToRefresh_strRefreshableViewBackground
           @see #SlideToRefresh_strRotateDrawableWhileSliding
           @see #SlideToRefresh_strScrollingWhileRefreshingEnabled
           @see #SlideToRefresh_strShowIndicator
           @see #SlideToRefresh_strSubLefterTextAppearance
         */
        public static final int[] SlideToRefresh = {
            0x7f01000b, 0x7f01000c, 0x7f01000d, 0x7f01000e,
            0x7f01000f, 0x7f010010, 0x7f010011, 0x7f010012,
            0x7f010013, 0x7f010014, 0x7f010015, 0x7f010016,
            0x7f010017, 0x7f010018, 0x7f010019, 0x7f01001a,
            0x7f01001b, 0x7f01001c, 0x7f01001d
        };
        /**
          <p>
          @attr description
           BELOW HERE ARE DEPRECEATED. DO NOT USE. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.example.foolframeworksample:strAdapterViewBackground
        */
        public static final int SlideToRefresh_strAdapterViewBackground = 16;
        /**
          <p>
          @attr description
           Style of Animation should be used displayed when pulling. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>rotate</code></td><td>0x0</td><td></td></tr>
<tr><td><code>flip</code></td><td>0x1</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.example.foolframeworksample:strAnimationStyle
        */
        public static final int SlideToRefresh_strAnimationStyle = 12;
        /**
          <p>
          @attr description
           Drawable to use as Loading Indicator. Changes both Lefter and Righter. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.foolframeworksample:strDrawable
        */
        public static final int SlideToRefresh_strDrawable = 6;
        /**
          <p>This symbol is the offset where the {@link com.example.foolframeworksample.R.attr#strDrawableBottom}
          attribute's value can be found in the {@link #SlideToRefresh} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.foolframeworksample:strDrawableBottom
        */
        public static final int SlideToRefresh_strDrawableBottom = 18;
        /**
          <p>
          @attr description
           Drawable to use as Loading Indicator in the Righter View. Overrides value set in strDrawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.foolframeworksample:strDrawableEnd
        */
        public static final int SlideToRefresh_strDrawableEnd = 8;
        /**
          <p>
          @attr description
           Drawable to use as Loading Indicator in the Lefter View. Overrides value set in strDrawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.foolframeworksample:strDrawableStart
        */
        public static final int SlideToRefresh_strDrawableStart = 7;
        /**
          <p>This symbol is the offset where the {@link com.example.foolframeworksample.R.attr#strDrawableTop}
          attribute's value can be found in the {@link #SlideToRefresh} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.foolframeworksample:strDrawableTop
        */
        public static final int SlideToRefresh_strDrawableTop = 17;
        /**
          <p>
          @attr description
           A drawable to use as the background of the Lefter and Righter Loading Views 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.example.foolframeworksample:strLefterBackground
        */
        public static final int SlideToRefresh_strLefterBackground = 1;
        /**
          <p>
          @attr description
           Text Color of the Lefter and Righter Loading Views Sub Lefter 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.example.foolframeworksample:strLefterSubTextColor
        */
        public static final int SlideToRefresh_strLefterSubTextColor = 3;
        /**
          <p>
          @attr description
           Base text color, typeface, size, and style for Lefter and Righter Loading Views 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.foolframeworksample:strLefterTextAppearance
        */
        public static final int SlideToRefresh_strLefterTextAppearance = 10;
        /**
          <p>
          @attr description
           Text Color of the Lefter and Righter Loading Views 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.example.foolframeworksample:strLefterTextColor
        */
        public static final int SlideToRefresh_strLefterTextColor = 2;
        /**
          <p>
          @attr description
          
        	Whether SlideToRefreshListView has it's extras enabled. This allows the user to be 
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Lefter and/or Righter Views to the ListView.
        


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
          <p>This is a private symbol.
          @attr name com.example.foolframeworksample:strListViewExtrasEnabled
        */
        public static final int SlideToRefresh_strListViewExtrasEnabled = 14;
        /**
          <p>
          @attr description
           Mode of Pull-to-Refresh that should be used 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>disabled</code></td><td>0x0</td><td></td></tr>
<tr><td><code>slideFromLeft</code></td><td>0x1</td><td></td></tr>
<tr><td><code>slideFromRight</code></td><td>0x2</td><td></td></tr>
<tr><td><code>both</code></td><td>0x3</td><td></td></tr>
<tr><td><code>manualOnly</code></td><td>0x4</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.example.foolframeworksample:strMode
        */
        public static final int SlideToRefresh_strMode = 4;
        /**
          <p>
          @attr description
           Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
          <p>This is a private symbol.
          @attr name com.example.foolframeworksample:strOverScroll
        */
        public static final int SlideToRefresh_strOverScroll = 9;
        /**
          <p>
          @attr description
           A drawable to use as the background of the Refreshable View 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.example.foolframeworksample:strRefreshableViewBackground
        */
        public static final int SlideToRefresh_strRefreshableViewBackground = 0;
        /**
          <p>
          @attr description
          
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
          <p>This is a private symbol.
          @attr name com.example.foolframeworksample:strRotateDrawableWhileSliding
        */
        public static final int SlideToRefresh_strRotateDrawableWhileSliding = 15;
        /**
          <p>
          @attr description
           Whether the user can scroll while the View is Refreshing 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
          <p>This is a private symbol.
          @attr name com.example.foolframeworksample:strScrollingWhileRefreshingEnabled
        */
        public static final int SlideToRefresh_strScrollingWhileRefreshingEnabled = 13;
        /**
          <p>
          @attr description
           Whether the Indicator overlay(s) should be used 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
          <p>This is a private symbol.
          @attr name com.example.foolframeworksample:strShowIndicator
        */
        public static final int SlideToRefresh_strShowIndicator = 5;
        /**
          <p>
          @attr description
           Base text color, typeface, size, and style for Lefter and Righter Loading Views Sub Lefter 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.foolframeworksample:strSubLefterTextAppearance
        */
        public static final int SlideToRefresh_strSubLefterTextAppearance = 11;
    };
}
